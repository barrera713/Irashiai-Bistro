{"ast":null,"code":"import { CURRENT_EMPLOYEE } from './types'; // import history from '../history';\n\nexport const employeeLogin = formData => dispatch => {\n  fetch('/partner/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'accept': 'application/json'\n    },\n    body: JSON.stringify(formData)\n  }).then(res => {\n    if (res.ok) {\n      return res.json().then(data => sessionStorage.setItem('token', data.token)).then(partner => dispatch({\n        type: CURRENT_EMPLOYEE,\n        payload: partner\n      })).then(window.location = '/reservations');\n    } else {\n      window.alert('Invalid name or password');\n    }\n  });\n};","map":{"version":3,"sources":["/Users/carlosbarrera/projects/Irashiai-Bistro/website/src/Actions/Employee.js"],"names":["CURRENT_EMPLOYEE","employeeLogin","formData","dispatch","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","sessionStorage","setItem","token","partner","type","payload","window","location","alert"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,SAAjC,C,CACA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AACnDC,EAAAA,KAAK,CAAC,gBAAD,EAAmB;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,gBAAU;AAFL,KAFW;AAMpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AANc,GAAnB,CAAL,CAQCQ,IARD,CAQMC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACC,EAAP,EAAW;AACP,aAAOD,GAAG,CAACE,IAAJ,GACNH,IADM,CACDI,IAAI,IAAIC,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,IAAI,CAACG,KAArC,CADP,EAENP,IAFM,CAEDQ,OAAO,IAAIf,QAAQ,CAAC;AACtBgB,QAAAA,IAAI,EAAEnB,gBADgB;AAEtBoB,QAAAA,OAAO,EAAEF;AAFa,OAAD,CAFlB,EAONR,IAPM,CAODW,MAAM,CAACC,QAAP,GAAkB,eAPjB,CAAP;AAQH,KATD,MASO;AACHD,MAAAA,MAAM,CAACE,KAAP,CAAa,0BAAb;AACH;AACJ,GArBD;AAsBH,CAvBM","sourcesContent":["import { CURRENT_EMPLOYEE } from './types';\n// import history from '../history';\n\nexport const employeeLogin = (formData) => dispatch => {\n    fetch('/partner/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'accept': 'application/json'\n        },\n        body: JSON.stringify(formData)\n    })\n    .then(res => {\n        if(res.ok) {\n            return res.json()\n            .then(data => sessionStorage.setItem('token', data.token))\n            .then(partner => dispatch({\n                type: CURRENT_EMPLOYEE,\n                payload: partner\n            })\n            )\n            .then(window.location = '/reservations')\n        } else {\n            window.alert('Invalid name or password')\n        }\n    })\n}"]},"metadata":{},"sourceType":"module"}