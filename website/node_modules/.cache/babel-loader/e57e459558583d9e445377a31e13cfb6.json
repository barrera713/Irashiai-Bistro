{"ast":null,"code":"var _jsxFileName = \"/Users/carlosbarrera/projects/Irashiai-Bistro/website/src/Components/ResCollection.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReservations } from '../Actions/Reservation';\n\nclass ResCollection extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: null\n    };\n\n    this.handleClick = selectedRow => {\n      console.log(\"handle id click\");\n    };\n\n    this.handleDate = e => {\n      e.preventDefault();\n      this.setState({\n        selectedDate: e.target[\"date\"].value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchReservations();\n  }\n\n  render() {\n    // console.log(\"inside date\", this.state.selectedDate)\n    const reservations = this.props.reservations; // date function for datatable header\n\n    const tableHeader = new Date();\n    const header = tableHeader.toDateString();\n    let newDate = new Date();\n    newDate.setDate(newDate.getDate());\n    let formatDate = newDate.toISOString().substr(0, 10);\n\n    let today = date => date.includes(formatDate);\n\n    let matchDate = date => date.includes(this.state.selectedDate); // if selected date matches props.date it returns that specific date\n\n\n    let searchDate = reservations.filter(i => {\n      if (this.state.selectedDate) {\n        return matchDate(i.date);\n      } else {\n        return today(i.date);\n      }\n    });\n    console.log('this is reservations:', reservations);\n    searchDate.sort((a, b) => {\n      return new Date(a.date + a.time) > new Date(b.date + b.time) ? 1 : -1;\n    });\n    searchDate.sort((a, b) => {\n      return new Date(a.time) > new Date(b.time);\n    });\n    return React.createElement(\"div\", {\n      className: \"coll-main-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleDate(e),\n      className: \"select-date-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, header), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      defaultValue: formatDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"div\", {\n      className: \"table-data-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Time\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Party Size\"))), React.createElement(\"tbody\", {\n      className: \"table-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, searchDate.map(i => React.createElement(\"tr\", {\n      onClick: () => this.handleClick(i._id),\n      key: i._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, i.guest.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, i.guest.contact), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, new Date(i.date.slice(0, 10).replace(/-/g, \"/\")).toDateString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, i.time), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, i.count)))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  reservations: state.allReservations.data\n});\n\nexport default connect(mapStateToProps, {\n  fetchReservations\n})(ResCollection);","map":{"version":3,"sources":["/Users/carlosbarrera/projects/Irashiai-Bistro/website/src/Components/ResCollection.js"],"names":["React","connect","fetchReservations","ResCollection","Component","state","selectedDate","handleClick","selectedRow","console","log","handleDate","e","preventDefault","setState","target","value","componentDidMount","props","render","reservations","tableHeader","Date","header","toDateString","newDate","setDate","getDate","formatDate","toISOString","substr","today","date","includes","matchDate","searchDate","filter","i","sort","a","b","time","map","_id","guest","name","contact","slice","replace","count","mapStateToProps","allReservations","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchReservations } from '../Actions/Reservation';\n\n\n\nclass ResCollection extends React.Component {\n\n\n    state = {\n        selectedDate: null\n    }\n    \n\n    componentDidMount() {\n       this.props.fetchReservations();\n    }\n\n    handleClick = (selectedRow) => {\n        console.log(\"handle id click\")\n    }\n\n\n\n    handleDate = (e) => {\n        e.preventDefault()\n        this.setState({\n            selectedDate: e.target[\"date\"].value\n        })\n    }\n    \n\n    render() {\n        // console.log(\"inside date\", this.state.selectedDate)\n        const { reservations } = this.props;\n        \n        // date function for datatable header\n       const tableHeader = new Date()\n       const header = tableHeader.toDateString()\n        \n\n\n        let newDate = new Date()\n        newDate.setDate(newDate.getDate() ) \n        let formatDate = newDate.toISOString().substr(0, 10)\n        let today = date => date.includes(formatDate) \n        \n        let matchDate = date => date.includes(this.state.selectedDate)\n        // if selected date matches props.date it returns that specific date\n        let searchDate = reservations.filter( i => {\n            if(this.state.selectedDate) {\n                return matchDate(i.date) \n            } else {\n                return today(i.date)\n            }\n        })\n        \n\n        console.log('this is reservations:', reservations)\n        searchDate.sort( (a, b) => { return new Date(a.date + a.time) > new Date(b.date + b.time) ? 1 : -1 } )\n        searchDate.sort( (a, b) => { return new Date(a.time) > new Date(b.time) })\n\n       \n        return (<div className=\"coll-main-wrapper\">\n            <div>\n                <form onSubmit={ (e) => this.handleDate(e)} className=\"select-date-form\">\n                <label className=\"table-header\">{header}</label>\n                    <input type=\"date\" name=\"date\" defaultValue={formatDate}></input>\n                    <button type=\"submit\">Search</button>\n                </form>\n            </div>\n            <div className=\"table-data-container\">\n                <table className=\"table-data\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Contact</th>\n                            <th>Date</th>\n                            <th>Time</th>\n                            <th>Party Size</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"table-body\">\n                    {searchDate.map(i => \n                    <tr onClick={ () => this.handleClick(i._id)} key={i._id}> \n                        <td>{i.guest.name}</td>\n                        <td>{i.guest.contact}</td>\n                        <td>{ new Date(i.date.slice(0, 10).replace(/-/g, \"/\")).toDateString() }</td>\n                        <td>{i.time}</td>\n                        <td>{i.count}</td>\n                    </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        </div>)\n    }\n\n\n}\n\n\nconst mapStateToProps = state => ({\n    reservations: state.allReservations.data\n})\n\n\n\nexport default connect(mapStateToProps, { fetchReservations })(ResCollection)\n"]},"metadata":{},"sourceType":"module"}